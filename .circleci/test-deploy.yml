version: 2.1

orbs:
  orb-tools: circleci/orb-tools@12.0
  corecci: {}

# Use this tag to ensure test jobs always run,
# even though the downstream publish job will only run on release tags.
filters: &filters
  tags:
    only: /.*/

# Filter for release tags.
release-filters: &release-filters
  branches:
    ignore: /.*/
  tags:
    only: /^v[0-9]+\.[0-9]+\.[0-9]+$/

jobs:
  # Use the default deploy key by not specifying a fingerprint.
  checkout_deploy_key-ubuntu22-test:
    docker:
      - image: cimg/base:current-22.04
    resource_class: small
    steps:
      - corecci/checkout
      - run:
          name: Verify Full Checkout
          shell: /bin/bash
          command: |
            if [ $(git log --oneline | wc -l) -le 1 ]; then
              echo "Full checkout failed. Expected more than one commit."
              exit 1
            fi

  # "go mod download" uses git under the hood, via either ssh or https.
  # This is primarily a test to ensure that GIT_SSH_COMMAND is being
  # persisted to subsequent steps and that other applications can
  # successfully use ssh afterwards. In CircleCI, the "checkout" command
  # has the secondary purpose of setting up all of your SSH keys for you.
  go_mod_download:
    docker:
      - image: cimg/go:1.23
    environment:
      GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no"
      GIT_TRACE: 1
      GODEBUG: netdns=cgo+2
      GOPRIVATE: github.com/juburr/*
      GOPROXY: direct
    resource_class: small
    steps:
      - corecci/checkout:
          depth: shallow
      - run:
          name: Use SSH for Git
          command: |
            git config --global url."git@github.com:".insteadOf "git://github.com/"
            git config --global url."git@github.com:".insteadOf "https://github.com/"
      - run:
          name: Go Mod Download
          command: |
            cd tests/gomod
            go mod download -x

  # Ubuntu 22 does not have FIPS mode enabled by default.
  checkout_fips-ubuntu22-test:
    docker:
      - image: cimg/base:current-22.04
    resource_class: small
    steps:
      - corecci/checkout:
          fingerprint: "SHA256:1wS2Fom3QTXyH5G2DS88+II0U9ajqGKOeq1wBA740Fc"
      - run:
          name: Verify Full Checkout
          shell: /bin/bash
          command: |
            if [ $(git log --oneline | wc -l) -le 1 ]; then
              echo "Full checkout failed. Expected more than one commit."
              exit 1
            fi

  # Test shallow checkout.
  checkout_fips_shallow-ubuntu22-test:
    docker:
      - image: cimg/base:current-22.04
    resource_class: small
    steps:
      - corecci/checkout:
          depth: shallow
          fingerprint: SHA256:1wS2Fom3QTXyH5G2DS88+II0U9ajqGKOeq1wBA740Fc
      - run:
          name: Verify Shallow Checkout
          shell: /bin/bash
          command: |
            if [ $(git log --oneline | wc -l) -ne 1 ]; then
              echo "Shallow checkout failed. Expected only one commit."
              exit 1
            fi
            if [ $(git branch --all | wc -l) -ne 1 ]; then
              echo "Shallow checkout failed. Expected only one branch."
              exit 1
            fi

  # Test empty checkout.
  checkout_fips_empty-ubuntu22-test:
    docker:
      - image: cimg/base:current-22.04
    resource_class: small
    steps:
      - corecci/checkout:
          depth: empty
          fingerprint: SHA256:1wS2Fom3QTXyH5G2DS88+II0U9ajqGKOeq1wBA740Fc
      - run:
          name: Verify Empty Checkout
          shell: /bin/bash
          command: |
            # Only the .git directory should be present in an empty checkout.
            if [ $(ls -A | wc -l) -ne 1 ]; then
              echo "Empty checkout failed. Expected only one file or directory."
              exit 1
            fi

  # UBI 9 and Rocky 9 should have FIPS mode enabled by default.
  # FIPS isn't enabled on the underlying hosts at circleci.com though, so
  # this isn't a true test of FIPS mode unfortunately. Just ensure the
  # orb works on these distros.
  checkout_fips-rocky9-test:
    docker:
      - image: docker.io/rockylinux:9.3
    resource_class: small
    steps:
      - run:
          name: Install Required Dependencies
          command: |
            # EL9 doesn't ship with git or an ssh client by default.
            dnf install openssh-clients git -y
      - corecci/checkout:
          fingerprint: "SHA256:1wS2Fom3QTXyH5G2DS88+II0U9ajqGKOeq1wBA740Fc"

workflows:
  test-deploy:
    jobs:
      # Test cases for the orb
      - checkout_deploy_key-ubuntu22-test:
          filters: *filters
      - checkout_fips-ubuntu22-test:
          filters: *filters
      - checkout_fips_shallow-ubuntu22-test:
          filters: *filters
      - checkout_fips_empty-ubuntu22-test:
          filters: *filters
      - checkout_fips-rocky9-test:
          filters: *filters
      - go_mod_download:
          filters: *filters  

      # The orb must be re-packed for publishing, and saved to the workspace.
      - orb-tools/pack:
          filters: *release-filters
      - orb-tools/publish:
          orb_name: juburr/corecci
          vcs_type: << pipeline.project.type >>
          pub_type: production
          # Ensure this job requires all test jobs and the pack job.
          requires:
            - orb-tools/pack
            - checkout_deploy_key-ubuntu22-test
            - checkout_fips-ubuntu22-test
            - checkout_fips_shallow-ubuntu22-test
            - checkout_fips_empty-ubuntu22-test
            - checkout_fips-rocky9-test
            - go_mod_download
          context: orb-publishing
          filters: *release-filters
